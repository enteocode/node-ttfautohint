((t,e)=>{"use strict";var r=e("path"),n=e("fs"),s=e("mkdirp"),i=e("child_process"),o=e("stream"),c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t};const a="ttfautohint".concat("win32"===t.platform?".exe":""),f=r.resolve(__dirname,"bin",a),p=Symbol("ttfautohint/buffer"),u={extended:!1,icon:!1,info:!0,hintingLimit:2048,min:12,max:48,reference:"",size:16},m=t=>{const e=["-W","-i",`-G ${t.hintingLimit}`];return t.info||e.push("-n"),t.reference&&e.push(`-R ${t.reference}`),t.icon?(e.push("-s","-x 24","-l 12","-r 48"),e):(t.extended&&e.push("-p"),e.concat([`-x ${t.size}`,`-l ${Math.min(t.min,t.size)}`,`-r ${Math.max(t.max,t.size)}`]))},h=(t,e="")=>{if(e&&"string"==typeof e){const t=r.dirname(e);return n.existsSync(t)||s.sync(t),e}return t.replace(/\.ttf/i,".compiled.ttf")};class l extends o.Transform{static compile(t,e,r={}){const s=h(t,e),i=new l(r),o=n.createReadStream(t),c=n.createWriteStream(s);o.pipe(i).pipe(c)}static transform(t,e={}){const r=m(c({},u,e)),{stderr:n,stdout:s}=i.spawnSync(f,r,{input:t,windowsHide:!0});if(n.length)throw new Error(n);return Buffer.from(s)}constructor(t={},e){super(e),this[p]=[],this.options=t}_transform(t,e,r){this[p].push(Buffer.from(t)),r()}_flush(t){try{const e=Buffer.concat(this[p]);t(null,l.transform(e,this.options))}catch(e){t(e.message)}}}Object.defineProperty(l,"name",{value:"TTFAutohint"}),module.exports=l})(process,require);
